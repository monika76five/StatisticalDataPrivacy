setwd("~/Dropbox/BLS work/short course/CE PUMD data")
Family = read.csv("fmli181.csv", header=T, sep=",")
View(Family)
names(Family)
vars = c("CUTENURE", "FINCBTAX", "MARITAL1", "REF_RACE", "REGION", "SEX_REF")
Subset1 = Family[names(Family) %in% vars, ]
View(Subset1)
Subset1 = Family[, names(Family) %in% vars]
View(Subset1)
table(Subset1$CUTENURE)
table(Subset1$MARITAL1)
table(Subset1$REF_RACE)
table(Subset1$REGION)
sum(is.na(Subset1$MARITAL1))
sum(is.na(Subset1$REF_RACE))
table(Subset1$REGION)
sum(is.na(Subset1$REGION))
table(Subset1$SEX_REF)
sum(is.na(Subset1$SEX_REF))
sum(is.na(Subset1$CUTENURE))
table(Subset1$CUTENURE) ## category 3 not observed
Family = read.csv("fmli171x.csv", header=T, sep=",")
names(Family)
vars = c("CUTENURE", "FINCBTAX", "MARITAL1", "REF_RACE", "REGION", "SEX_REF")
Subset1 = Family[, names(Family) %in% vars]
table(Subset1$CUTENURE) ## category 3 not observed
sum(is.na(Subset1$CUTENURE))
table(Subset1$MARITAL1)
sum(is.na(Subset1$MARITAL1))
table(Subset1$REF_RACE)
sum(is.na(Subset1$REF_RACE))
table(Subset1$REGION)
sum(is.na(Subset1$REGION)) ## has 215 missing values
table(Subset1$SEX_REF)
sum(is.na(Subset1$SEX_REF))
### Subset2
vars2 = c("REF_RACE", "FINCBTAX")
Subset2 = Subset1[, names(Subset1) %in% vars2]
View(Subset2)
sum(Subset2$FINCBTAX==0)
names(Subset2) = c("income", "race")
CEdata = Subset2
write.csv(CEdata, file = "CEdata.csv")
require(runjags)
require(coda)
require(ggplot2)
moviedata = read.csv("CEdata.csv", header=T)
## write the model
modelString <-"
model {
## likelihood
for (i in 1:N){
y[i] ~ dnorm(mu_j[genre[i]], invsigma2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
CEdata = read.csv("CEdata.csv", header=T)
## write the model
modelString <-"
model {
## likelihood
for (i in 1:N){
y[i] ~ dnorm(mu_j[genre[i]], invsigma2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
View(CEdata)
y = CEdata$income      # The y values are in the column named income
race = CEdata$race      # The race index is in the column named race
N = length(y)  # Compute the number of observations
J = length(unique(race)) # Compute the number of race categories
CEdata = read.csv("CEdata.csv", header=T)
require(ggplot2)
require(reshape2)
CEdata = read.csv("CEdata.csv", header=T)
CEdata_long = melt(CEdata, id.vars = "race")
View(CEdata_long)
ggplot(CEdata_long, aces(value)) +
geom_density((color = variable))
ggplot(CEdata_long, aes(value)) +
geom_density((color = variable))
CEdata = CEdata[,2:3]
View(CEdata)
CEdata_long = melt(CEdata, id.vars = "race")
ggplot(CEdata_long, aes(value)) +
geom_density((color = variable))
ggplot(CEdata_long, aes(value)) +
geom_density((color = race))
CEdata$race = as.factor(CEdata$race)
CEdata_long = melt(CEdata, id.vars = "race")
ggplot(CEdata_long, aes(value)) +
geom_density((color = race))
CEdata = read.csv("CEdata.csv", header=T)
CEdata = CEdata[,2:3]
CEdata$race = as.factor(CEdata$race)
ggplot(CEdata, aes(value)) +
geom_density((color = race))
ggplot(CEdata, aes(income, color = race)) +
geom_density()
require(runjags)
require(coda)
require(ggplot2)
CEdata = read.csv("CEdata.csv", header=T)
## write the model
modelString <-"
model {
## likelihood
for (i in 1:N){
y[i] ~ dnorm(mu_j[genre[i]], invsigma2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
y = CEdata$income      # The y values are in the column named income
race = CEdata$race      # The race index is in the column named race
N = length(y)  # Compute the number of observations
J = length(unique(race)) # Compute the number of race categories
the_data <- list("y" = y, "race" = race, "N" = N, "J" = J,
"mu0" = 3, "g0" = 0.001,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
set.seed(123)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000)
## write the model
modelString <-"
model {
## likelihood
for (i in 1:N){
y[i] ~ dnorm(mu_j[race[i]], invsigma2)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
invsigma2 ~ dgamma(a_g, b_g)
sigma <- sqrt(pow(invsigma2, -1))
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
"
y = CEdata$income      # The y values are in the column named income
race = CEdata$race      # The race index is in the column named race
N = length(y)  # Compute the number of observations
J = length(unique(race)) # Compute the number of race categories
the_data <- list("y" = y, "race" = race, "N" = N, "J" = J,
"mu0" = 3, "g0" = 0.001,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
set.seed(123)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000)
posterior
CEdata %>% group_by(race) %>%
summarize(N = n(), M = mean(income),
SE = sd(income) / sqrt(N)) -> Ind_Stats
require(runjags)
require(coda)
require(ggplot2)
CEdata %>% group_by(race) %>%
summarize(N = n(), M = mean(income),
SE = sd(income) / sqrt(N)) -> Ind_Stats
require(tidyverse)
CEdata %>% group_by(race) %>%
summarize(N = n(), M = mean(income),
SE = sd(income) / sqrt(N)) -> Ind_Stats
View(Ind_Stats)
Post_Means <- summary(posterior)[, 2]
Means1 <- data.frame(Type = "Individual", Value = Ind_Stats$M)
Means2 <- data.frame(Type = "Multilevel", Value =
Post_Means[3:(4 + J - 2)])
ggplot(rbind(Means1, Means2), aes(Type, Value)) +
geom_jitter(width = 0.1)
summary(posterior)
Means1
Means2
mean(CEdata$income)
sd(CEdata$income)
the_data <- list("y" = y, "race" = race, "N" = N, "J" = J,
"mu0" = 60000, "g0" = 60000,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
set.seed(123)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000)
posterior
summary(posterior)
the_data <- list("y" = y, "race" = race, "N" = N, "J" = J,
"mu0" = 60000, "g0" = 100,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
set.seed(123)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000)
posterior
summary(posterior)
CEdata %>% group_by(race) %>%
summarize(N = n(), M = mean(income),
SE = sd(income) / sqrt(N)) -> Ind_Stats
Post_Means <- summary(posterior)[, 2]
Means1 <- data.frame(Type = "Individual", Value = Ind_Stats$M)
Means2 <- data.frame(Type = "Multilevel", Value =
Post_Means[3:(4 + J - 2)])
ggplot(rbind(Means1, Means2), aes(Type, Value)) +
geom_jitter(width = 0.1)
the_data <- list("y" = y, "race" = race, "N" = N, "J" = J,
"mu0" = 60000, "g0" = 0.0001,
"a_t" = 1, "b_t" = 1,
"a_g" = 1, "b_g" = 1)
set.seed(123)
posterior <- run.jags(modelString,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_j", "sigma"),
adapt = 1000,
burnin = 5000,
sample = 5000)
posterior
summary(posterior)
CEdata %>% group_by(race) %>%
summarize(N = n(), M = mean(income),
SE = sd(income) / sqrt(N)) -> Ind_Stats
Post_Means <- summary(posterior)[, 2]
Means1 <- data.frame(Type = "Individual", Value = Ind_Stats$M)
Means2 <- data.frame(Type = "Multilevel", Value =
Post_Means[3:(4 + J - 2)])
ggplot(rbind(Means1, Means2), aes(Type, Value)) +
geom_jitter(width = 0.1)
CEdata = read.csv("CEdata.csv", header=T)
load(url('http://s3.amazonaws.com/assets.datacamp.com/course/dasi/inference.Rdata'))
setwd("~/Vassar/2019-2020/Fall 2019/MATH 347/Lectures/Lecture 1 Bayesian intro")
setwd("~/Vassar/2019-2020/Fall 2019/MATH 347/Lectures/Lecture 2 Bayesian inference for a proportion")
install_github("bayesball/ProbBayes")
library("devtools")
install_github("bayesball/ProbBayes")
setwd("~/Vassar/2019-2020/Fall 2019/MATH 347/Lectures/Lecture 1 Bayesian intro")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Spring2020/Lecture 1 Introduction")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 0 Introduction")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 1 Overview of synthetic data")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 0 Introduction")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 1 Overview of synthetic data")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 2 Introduction to Bayesian modeling")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 2 Introduction to Bayesian modeling part 2")
setwd("~/Dropbox/Vassar 2019-2022/Fall 2021/Intensive/lectures/Lecture 3 Introduction to Bayesian modeling part 2")
knitr::opts_chunk$set(echo = TRUE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
bikesharing_data <- readr::read_csv(file = "bikeshare.csv")
bikesharing_data[1:3, ]
